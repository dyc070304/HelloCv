#include <iostream>
#include <fstream>
#include <string>
using namespace std;


string caesarEncrypt(string text, int key) {
    string result = "";
    for (char c : text) {
        if (isalpha(c)) {
            char base = islower(c) ? 'a' : 'A';
            c = (c - base + key) % 26 + base;
        }
        result += c;
    }
    return result;
}


string caesarDecrypt(string text, int key) {
    return caesarEncrypt(text, 26 - key);
}


string readFile(string filename) {
    ifstream file(filename);
    if (!file.is_open()) return "";
    
    string content((istreambuf_iterator<char>(file)), 
                   istreambuf_iterator<char>());
    file.close();
    return content;
}


bool writeFile(string filename, string content) {
    ofstream file(filename);
    if (!file.is_open()) return false;
    
    file << content;
    file.close();
    return true;
}

int main() {
    while (true) {
        cout << "\n=== 文件加密/解密系统 ===" << endl;
        cout << "1. 文本加密" << endl;
        cout << "2. 文本解密" << endl;
        cout << "3. 文件加密" << endl;
        cout << "4. 文件解密" << endl;
        cout << "5. 退出" << endl;
        cout << "请选择: ";
        
        int choice;
        cin >> choice;
        
        if (choice == 5) break;
        
        if (choice == 1) {
            string text;
            int key;
            cout << "输入要加密的文本: ";
            cin.ignore();
            getline(cin, text);
            cout << "输入密钥: ";
            cin >> key;
            string result = caesarEncrypt(text, key);
            cout << "加密结果: " << result << endl;
        }
        else if (choice == 2) {
            string text;
            int key;
            cout << "输入要解密的文本: ";
            cin.ignore();
            getline(cin, text);
            cout << "输入密钥: ";
            cin >> key;
            string result = caesarDecrypt(text, key);  
            cout << "解密结果: " << result << endl;
        }
        else if (choice == 3) {
            string inputPath, outputPath;
            int key;
            cout << "输入要加密的文件: ";
            cin >> inputPath;
            cout << "输入密钥: ";
            cin >> key;  // 修正：补全输入
            cout << "输入输出文件: ";
            cin >> outputPath;
            
            string content = readFile(inputPath);
            if (content != "") {
                string encrypted = caesarEncrypt(content, key); 
                if (writeFile(outputPath, encrypted)) {
                    cout << "加密成功" << endl;
                } else {
                    cout << "保存失败" << endl;
                }
            } else {
                cout << "读取失败" << endl;
            }
        }
        else if (choice == 4) {
            string inputPath, outputPath;
            int key;
            cout << "输入要解密的文件: ";
            cin >> inputPath;
            cout << "输入密钥: ";
            cin >> key;
            cout << "输入输出文件: ";
            cin >> outputPath;
            
            string content = readFile(inputPath);
            if (content != "") {
                string decrypted = caesarDecrypt(content, key);  
                if (writeFile(outputPath, decrypted)) {
                    cout << "文件解密成功" << endl;
                } else {
                    cout << "保存失败" << endl;
                }
            } else {
                cout << "读取失败" << endl;
            }
        }
    }
    return 0;  
